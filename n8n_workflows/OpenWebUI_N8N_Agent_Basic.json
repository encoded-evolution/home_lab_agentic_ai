{
  "name": "OpenWebUI_N8N_Agent_Basic",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "d9530ac9-77dc-4825-913d-c65cac155792",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        1024,
        128
      ]
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.body.sessionId }}"
      },
      "id": "847e3b15-b2b3-4645-a5a5-1b6e4be1b44a",
      "name": "Postgres Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1,
      "position": [
        1200,
        128
      ],
      "notesInFlow": false
    },
    {
      "parameters": {
        "content": "## AI Agent with Webhook for Open WebUI",
        "height": 525,
        "width": 1596,
        "color": 6
      },
      "id": "63e9f6ad-bac7-4487-8c4a-e4c616edd1fc",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        96,
        -224
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "1de1d325-4882-4ee6-b7b3-dd7e64528174",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1456,
        -144
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "invoke-n8n-agent",
        "authentication": "headerAuth",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "9ca1afb5-2388-4ba7-9af3-cf7e3ebc4643",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        160,
        -64
      ],
      "webhookId": "7f8a71dd-b98a-4c87-aa3c-c0f7c3b63535",
      "credentials": {
        "httpHeaderAuth": {
          "id": "bcFcXchiS8AUnfYK",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "name": "web_search",
        "description": "Call this tool to do an advanced web search based on a query you define.",
        "workflowId": {
          "__rl": true,
          "value": "={{ $workflow.id }}",
          "mode": "id"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "query": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('query', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "tool_type",
              "displayName": "tool_type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            },
            {
              "id": "query",
              "displayName": "query",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "image_url",
              "displayName": "image_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        1360,
        128
      ],
      "id": "0604e6cb-09f5-4508-86ee-b26c8036bfbe",
      "name": "Web Search Tool"
    },
    {
      "parameters": {
        "content": "## Example Agent Tool",
        "height": 340,
        "width": 680,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1024,
        320
      ],
      "id": "af73ce2d-fd9c-4208-87f1-89908e4e01be",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "url": "=https://api.search.brave.com/res/v1/web/search?q={{ $('Tool Start').item.json.query }} }}&summary=1",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1296,
        416
      ],
      "id": "a10bc2ad-c925-46b6-b8fd-dbc7f866b95f",
      "name": "Brave Web Search",
      "credentials": {
        "httpHeaderAuth": {
          "id": "bcFcXchiS8AUnfYK",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "query"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        1088,
        416
      ],
      "id": "535c65dd-d77d-4c18-93e4-08e0c1e73345",
      "name": "Tool Start"
    },
    {
      "parameters": {
        "url": "=https://api.search.brave.com/res/v1/summarizer/search?key={{ $json.summarizer.key }}&entity_info=1",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip"
            }
          ]
        },
        "options": {}
      },
      "id": "10a4fffb-50ce-4aeb-b8d5-eb4291d35698",
      "name": "Summarize Web Research",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1504,
        416
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f5ebbd4f-6549-4a31-b3f8-eee7634dc439",
              "leftValue": "={{ $json.body.sessionId }}",
              "rightValue": "None",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        368,
        -64
      ],
      "id": "711e7544-9f6e-4247-ab8b-6999d416a8cb",
      "name": "If"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        656,
        176
      ],
      "id": "2840023f-8ccd-4c27-b62d-e394bca506e4",
      "name": "OpenAI Chat Model1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d264444f-c01a-4fa0-86a4-c0bf0e4c8537",
              "name": "output",
              "value": "={{ $json.output || $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1248,
        -144
      ],
      "id": "ee6cc749-e03e-40f8-94a4-046278aba672",
      "name": "Edit Fields (Set Output Field)"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.body.chatInput }}",
        "options": {
          "systemMessage": "You are a personal assistant who helps answer questions from a corpus of documents. The documents are either text based (Txt, docs, extracted PDFs, etc.) or tabular data (CSVs or Excel documents).\n\nYou are given tools to perform RAG in the 'documents' table, look up the documents available in your knowledge base in the 'document_metadata' table, extract all the text from a given document, and query the tabular files with SQL in the 'document_rows' table.\n\nAlways start by performing RAG unless the question requires a SQL query for tabular data (fetching a sum, finding a max, something a RAG lookup would be unreliable for). If RAG doesn't help, then look at the documents that are available to you, find a few that you think would contain the answer, and then analyze those.\n\nAlways tell the user if you didn't find the answer. Don't make something up just to please them."
        }
      },
      "id": "1f642980-99e0-4bdd-bf33-6191025d8197",
      "name": "Primary AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        768,
        -144
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Webhook').item.json.body.chatInput }}"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        560,
        48
      ],
      "id": "186d45ed-5663-46fe-a5a3-37940d84d716",
      "name": "Open WebUI Metadata LLM"
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Primary AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Primary AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Web Search Tool": {
      "ai_tool": [
        [
          {
            "node": "Primary AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Tool Start": {
      "main": [
        [
          {
            "node": "Brave Web Search",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Brave Web Search": {
      "main": [
        [
          {
            "node": "Summarize Web Research",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Primary AI Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Open WebUI Metadata LLM",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Open WebUI Metadata LLM",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields (Set Output Field)": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Primary AI Agent": {
      "main": [
        [
          {
            "node": "Edit Fields (Set Output Field)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Open WebUI Metadata LLM": {
      "main": [
        [
          {
            "node": "Edit Fields (Set Output Field)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "b3226f99-9de7-4a34-bfa7-dfbeaf8de9ea",
  "meta": {
    "instanceId": "a819d7cd38e9101be2e496298e8bf426ce9cdf78d2af35ddf44c6ad25d50158b"
  },
  "id": "96DeVVtlxLeRMW78",
  "tags": []
}